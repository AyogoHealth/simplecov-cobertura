require 'nokogiri'
require 'simplecov'

class SimpleCov::Formatter::CoberturaFormatter
  RESULT_FILE_NAME = 'coverage.xml'
  DTD_URL = 'http://cobertura.sourceforge.net/xml/coverage-04.dtd'

  def format(result)
    xml = result_to_xml result
    
    result_path = File.join( SimpleCov.coverage_path, RESULT_FILE_NAME )
    File.write(result_path, xml)
    
    puts "Coverage report generated for #{result.command_name} to #{result_path}"
    
    return xml
  end
  
  private 
  def result_to_xml(result)
    builder = Nokogiri::XML::Builder.new do |xml|
      xml.doc.create_internal_subset(
          'coverage', nil, DTD_URL
      )
      xml << '<!-- Generated by simplecov-cobertura -->'
      root_dir = SimpleCov.root

      xml.coverage ({ 'line-rate' => (result.covered_percent/100).round(2),
          'branch-rate' => 0,
          'lines-covered' => result.covered_lines,
          'lines-valid' => result.covered_lines + result.missed_lines,
          'branches-covered' => 0,
          'branches-valid' => 0,
          'branch-rate' => 0,
          'complexity' => 0,
          'version' => 0,
          'timestamp' => Time.now.to_i
      }) do
        xml.sources do
          xml.source root_dir
        end
        
        xml.packages do
          xml.package('name' => 'simplecov-cobertura', 'line-rate' => (result.covered_percent/100).round(2), 'branch-rate' => 0, 'complexity' => 0) do
            xml.classes do
              result.files.each do |file|
                filename = file.filename
                path = filename.gsub(File.join(root_dir, ''), '')
                xml.class_({'name' => File.basename(filename, '.*'), 'filename' => path, 'line-rate' => file.covered_percent/100, 'branch-rate' => 0, 'complexity' => 0}) do
                  xml.methods_
                  xml.lines do
                    file.lines.each do |line|
                      if line.covered? || line.missed?
                        xml.line('number' => line.line_number, 'branch' => false, 'hits' => line.coverage)
                      end
                    end
                  end
                end
              end
            end
          end
        end
      end
    end
    builder.to_xml
  end
end

